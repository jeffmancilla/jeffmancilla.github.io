---
import Layout from '../layouts/Layout.astro'
---

<script>
  let currentIndex = null
  let cast = null
  let isCasting = false
  let repeatCount = 0
  let interval = 515
  let ping = 200

  const spellDiv = document.querySelector('#spell')
  const resultDiv = document.querySelector('#result')
  const countSpan = document.querySelector('#repeat')
  const pingInput = document.querySelector('#ping')
  const bodyEl = document.querySelector('body')
  const pickStartAudio = document.querySelector('#pickStart')
  const pickCycleAudio = document.querySelector('#pickCycle')
  const pickEndAudio = document.querySelector('#pickEnd')
  const Cards = ['Blue_Card', 'Red_Card', 'Gold_Card']

  const cycleCards = () => {
    pickCycleAudio.play()
    if (currentIndex === 0) {
      // blue
      spellDiv.style.backgroundImage = `url('../${Cards[0]}.webp')`
      currentIndex = 1
    } else if (currentIndex === 1) {
      // red
      spellDiv.style.backgroundImage = `url('../${Cards[1]}.webp')`
      currentIndex = 2
    } else {
      //gold
      spellDiv.style.backgroundImage = `url('../${Cards[2]}.webp')`
      currentIndex = 0
    }
  }
  const clearTimers = () => {
    pickEndAudio.play()
    clearInterval(cast)
    currentIndex = 0
    isCasting = false
    cast = null
  }

  const castSpell = () => {
    if (!isCasting) {
      resultDiv.style.animationPlayState = 'unset'
      pickStartAudio.play()
      currentIndex = Math.floor(Math.random() * Cards.length)
      spellDiv.style.backgroundImage = `url('${Cards[currentIndex]}.webp')`
      setTimeout(() => (isCasting = true), 1)
      cycleCards()
      cast = setInterval(cycleCards, interval)
    }
    if (isCasting) {
      //   repeatCount =
      //     resultDiv.style.backgroundImage == spellDiv.style.backgroundImage
      //       ? (repeatCount += 1)
      //       : 0
      //   countSpan.innerHTML = `x ${repeatCount}`
      resultDiv.style.backgroundImage = spellDiv.style.backgroundImage
      spellDiv.style.backgroundImage = `url('../Pick_a_Card.webp')`

      clearTimers()
    }
  }

  spellDiv.style.backgroundImage = `url('../Pick_a_Card.webp')`
  pingInput.value = ping

  spellDiv.addEventListener('click', () => {
    setTimeout(castSpell, pingInput.value)
  })

  bodyEl.addEventListener('keydown', (e) => {
    // e.preventDefault()
    if (e.key === 'w') {
      setTimeout(castSpell, pingInput.value)
    }
  })
</script>

<Layout title="Bleu Card">
  <main>
    <h2>Pull out the blue cards</h2>
    <section>
      <label for="ping">Ping (ms)</label>
      <input type="number" name="ping" id="ping" value="200" />
    </section>
    <section>
      <div id="spell"></div>
      <div id="result"></div>
      <span id="repeat"></span>
    </section>
  </main>
  <audio id="pickStart" src="../pick_start.ogg" autoplay></audio>
  <audio id="pickCycle" src="../pick_cycle.ogg" autoplay></audio>
  <audio id="pickEnd" src="../pick_end.ogg" autoplay></audio>
</Layout>

<style>
  main {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }
  #spell,
  #result {
    width: 4rem;
    height: 4rem;
    border: 1px groove currentColor;
  }
  #result {
    animation-name: flash;
    animation-duration: 0.3s;
    animation-play-state: paused;
  }
  @keyframes flash {
    25% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  section {
    display: flex;
    gap: 1rem;
  }
</style>
